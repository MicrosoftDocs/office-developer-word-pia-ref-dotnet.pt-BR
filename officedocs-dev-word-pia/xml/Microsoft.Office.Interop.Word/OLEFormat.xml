<Type Name="OLEFormat" FullName="Microsoft.Office.Interop.Word.OLEFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcdda2a9384c1b47b80159134d1ef27ec87d05a8" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43925104" /></Metadata><TypeSignature Language="C#" Value="public interface OLEFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.OLEFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEFormat" />
  <TypeSignature Language="F#" Value="type OLEFormat = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020933-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="25c46-101">Representa as características OLE (diferentes de vinculação) de um objeto OLE, de um controle ActiveX ou de um campo.</span><span class="sxs-lookup"><span data-stu-id="25c46-101">Represents the OLE characteristics (other than linking) for an OLE object, ActiveX control, or field.</span></span></summary>
    <remarks><para><span data-ttu-id="25c46-102">Use a propriedade <b>OLEFormat</b> para um <see cref="T:Microsoft.Office.Interop.Word.Shape" /> <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objeto, ou, <see cref="T:Microsoft.Office.Interop.Word.Field" /> para retornar o objeto <b>OLEFormat</b> .</span><span class="sxs-lookup"><span data-stu-id="25c46-102">Use the <b>OLEFormat</b> property for a <see cref="T:Microsoft.Office.Interop.Word.Shape" />, <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />, or <see cref="T:Microsoft.Office.Interop.Word.Field" /> object to return the <b>OLEFormat</b> object.</span></span></para>
      <para><span data-ttu-id="25c46-103">Nem todos os tipos de formas, formas embutidas e campos têm recursos OLE.</span><span class="sxs-lookup"><span data-stu-id="25c46-103">Not all types of shapes, inline shapes, and fields have OLE capabilities.</span></span> <span data-ttu-id="25c46-104">Use a propriedade <b>Type</b> dos objetos <b>Shape</b> e <b>InlineShape</b> para determinar a categoria da forma ou da forma embutida especificada.</span><span class="sxs-lookup"><span data-stu-id="25c46-104">Use the <b>Type</b> property for the <b>Shape</b> and <b>InlineShape</b> objects to determine what category the specified shape or inline shape falls into.</span></span> <span data-ttu-id="25c46-105">A propriedade <b>Type</b> para um objeto <b>Field</b> retorna o tipo de campo.</span><span class="sxs-lookup"><span data-stu-id="25c46-105">The <b>Type</b> property for a <b>Field</b> object returns the type of field.</span></span></para>
      <para><span data-ttu-id="25c46-106">Você pode usar os <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" /> métodos,, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" /> <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" /> e e <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> para automatizar um objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="25c46-106">You can use the <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />, and <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> methods to automate an OLE object.</span></span></para>
      <para><span data-ttu-id="25c46-107">Use a <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> propriedade para retornar um objeto que representa um controle ActiveX ou um objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="25c46-107">Use the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> property to return an object that represents an ActiveX control or OLE object.</span></span> <span data-ttu-id="25c46-108">Com esse objeto, você poderá usar as propriedades e os métodos do aplicativo contêiner ou do controle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="25c46-108">With this object, you can use the properties and methods of the container application or the ActiveX control.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="oLEFormat.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25c46-109">Ativa o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-109">Activates the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateAs">
      <MemberSignature Language="C#" Value="public void ActivateAs (string ClassType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateAs([in]string ClassType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ActivateAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateAs (ClassType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateAs(System::String ^ ClassType);" />
      <MemberSignature Language="F#" Value="abstract member ActivateAs : string -&gt; unit" Usage="oLEFormat.ActivateAs ClassType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="25c46-110"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="25c46-110">Required <b>String</b>.</span></span> <span data-ttu-id="25c46-111">O nome do aplicativo no qual um objeto OLE é aberto.</span><span class="sxs-lookup"><span data-stu-id="25c46-111">The name of the application in which an OLE object is opened.</span></span> <span data-ttu-id="25c46-112">Para ver uma lista dos tipos de objeto dos quais o objeto OLE pode ser ativado, clique no objeto e, em seguida, abra a caixa de diálogo Converter (menu Editar, submenu objeto).</span><span class="sxs-lookup"><span data-stu-id="25c46-112">To see a list of object types that the OLE object can be activated as, click the object and then open the Convert dialog box (Edit menu, Object submenu).</span></span> <span data-ttu-id="25c46-113">Você pode encontrar a <paramref name="ClassType" /> cadeia de caracteres inserindo um objeto como uma forma embutida e, em seguida, exibindo os códigos de campo.</span><span class="sxs-lookup"><span data-stu-id="25c46-113">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="25c46-114">O tipo de classe do objeto segue a palavra "Incorporar" ou a palavra "LINK".</span><span class="sxs-lookup"><span data-stu-id="25c46-114">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></param>
        <summary><span data-ttu-id="25c46-115">Define o valor do registro do Windows que determina o aplicativo padrão usado para ativar o objeto OLE especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-115">Sets the Windows registry value that determines the default application used to activate the specified OLE object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-116">Retorna um <see cref="T:Microsoft.Office.Interop.Word.Application" /> objeto que representa o aplicativo Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="25c46-116">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public string ClassType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassType : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-117">Retorna ou define o tipo de classe para o campo, imagem ou objeto OLE especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-117">Returns or sets the class type for the specified OLE object, picture, or field.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="25c46-118">Essa propriedade é somente leitura para objetos vinculados, exceto vínculos DDE.</span><span class="sxs-lookup"><span data-stu-id="25c46-118">This property is read-only for linked objects other than DDE links.</span></span></para>
          <para><span data-ttu-id="25c46-119">Você pode ver uma lista dos aplicativos disponíveis na caixa Tipo de Objeto na guia Criar Novo, na caixa de diálogo Objeto (menu Inserir).</span><span class="sxs-lookup"><span data-stu-id="25c46-119">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span></span> <span data-ttu-id="25c46-120">Você pode encontrar a <paramref name="ClassType" /> cadeia de caracteres inserindo um objeto como uma forma embutida e, em seguida, exibindo os códigos de campo.</span><span class="sxs-lookup"><span data-stu-id="25c46-120">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="25c46-121">O tipo de classe do objeto segue a palavra "Incorporar" ou a palavra "LINK".</span><span class="sxs-lookup"><span data-stu-id="25c46-121">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public void ConvertTo (ref object ClassType, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertTo([in]object&amp; ClassType, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ConvertTo(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertTo (Optional ByRef ClassType As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object)" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : obj * obj * obj * obj * obj -&gt; unit" Usage="oLEFormat.ConvertTo (ClassType, DisplayAsIcon, IconFileName, IconIndex, IconLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="25c46-122"><b>Objeto</b>opcional.</span><span class="sxs-lookup"><span data-stu-id="25c46-122">Optional <b>Object</b>.</span></span> <span data-ttu-id="25c46-123">O nome do aplicativo usado para ativar o objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="25c46-123">The name of the application used to activate the OLE object.</span></span> <span data-ttu-id="25c46-124">Você pode ver uma lista dos aplicativos disponíveis na caixa Tipo de Objeto na guia Criar Novo, na caixa de diálogo Objeto (menu Inserir).</span><span class="sxs-lookup"><span data-stu-id="25c46-124">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span></span> <span data-ttu-id="25c46-125">Você pode encontrar a <paramref name="ClassType" /> cadeia de caracteres inserindo um objeto como uma forma embutida e, em seguida, exibindo os códigos de campo.</span><span class="sxs-lookup"><span data-stu-id="25c46-125">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="25c46-126">O tipo de classe do objeto segue a palavra "Incorporar" ou a palavra "LINK".</span><span class="sxs-lookup"><span data-stu-id="25c46-126">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="25c46-127"><b>Objeto</b>opcional.</span><span class="sxs-lookup"><span data-stu-id="25c46-127">Optional <b>Object</b>.</span></span> <span data-ttu-id="25c46-128"><b>True</b> para exibir o objeto OLE como um ícone.</span><span class="sxs-lookup"><span data-stu-id="25c46-128"><b>True</b> to display the OLE object as an icon.</span></span> <span data-ttu-id="25c46-129">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="25c46-129">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="25c46-130"><b>Objeto</b>opcional.</span><span class="sxs-lookup"><span data-stu-id="25c46-130">Optional <b>Object</b>.</span></span> <span data-ttu-id="25c46-131">O arquivo que contém o ícone a ser exibido.</span><span class="sxs-lookup"><span data-stu-id="25c46-131">The file that contains the icon to be displayed.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="25c46-132"><b>Objeto</b>opcional.</span><span class="sxs-lookup"><span data-stu-id="25c46-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="25c46-133">O número de índice do ícone dentro <paramref name="IconFileName" /> .</span><span class="sxs-lookup"><span data-stu-id="25c46-133">The index number of the icon within <paramref name="IconFileName" />.</span></span> <span data-ttu-id="25c46-134">A ordem dos ícones no arquivo especificado corresponde à ordem na qual os ícones aparecem na caixa de diálogo Alterar ícone (menu Inserir, caixa de diálogo Objeto), quando a caixa de seleção Exibir como ícone está marcada.</span><span class="sxs-lookup"><span data-stu-id="25c46-134">The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (Insert menu, Object dialog box) when the Display as icon check box is selected.</span></span> <span data-ttu-id="25c46-135">O primeiro ícone no arquivo tem o número de índice 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="25c46-135">The first icon in the file has the index number 0 (zero).</span></span> <span data-ttu-id="25c46-136">Se um ícone com o número de índice fornecido não existir no <paramref name="IconFileName" /> , o ícone com o número de índice 1 (o segundo ícone no arquivo) será usado.</span><span class="sxs-lookup"><span data-stu-id="25c46-136">If an icon with the given index number doesn't exist in <paramref name="IconFileName" />, the icon with the index number 1 (the second icon in the file) is used.</span></span> <span data-ttu-id="25c46-137">O valor padrão é 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="25c46-137">The default value is 0 (zero).</span></span></param>
        <param name="IconLabel"><span data-ttu-id="25c46-138"><b>Objeto</b>opcional.</span><span class="sxs-lookup"><span data-stu-id="25c46-138">Optional <b>Object</b>.</span></span> <span data-ttu-id="25c46-139">Um nome (legenda) a ser exibido abaixo do ícone.</span><span class="sxs-lookup"><span data-stu-id="25c46-139">A label (caption) to be displayed beneath the icon.</span></span></param>
        <summary><span data-ttu-id="25c46-140">Converte o objeto OLE especificado de uma classe em outra, tornando possível que você edite o objeto em um aplicativo servidor diferente ou altere como o objeto é exibido no documento.</span><span class="sxs-lookup"><span data-stu-id="25c46-140">Converts the specified OLE object from one class to another, making it possible for you to edit the object in a different server application, or change how the object is displayed in the document.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-141">Retorna um inteiro de 32 bits que indica o aplicativo no qual o objeto especificado foi criado.</span><span class="sxs-lookup"><span data-stu-id="25c46-141">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="25c46-142">Se o objeto foi criado no Microsoft Word, essa propriedade retornará o número hexadecimal 4D535744, que representa a cadeia de caracteres "MSWD".</span><span class="sxs-lookup"><span data-stu-id="25c46-142">If the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD."</span></span> <span data-ttu-id="25c46-143">[!OBSERVAçãO] Esse valor também pode ser representado pela constante <b>wdCreatorCode</b>.</span><span class="sxs-lookup"><span data-stu-id="25c46-143">This value can also be represented by the constant <b>wdCreatorCode</b>.</span></span></para>
          <para><span data-ttu-id="25c46-144">A propriedade <b>Creator</b> foi projetada principalmente para ser usado no Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="25c46-144">The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="25c46-145">Por exemplo, o Microsoft Word tem o código de criador MSWD.</span><span class="sxs-lookup"><span data-stu-id="25c46-145">For example, Microsoft Word has the creator code MSWD.</span></span> <span data-ttu-id="25c46-146">Para obter informações adicionais sobre essa propriedade, consulte a referência da linguagem Ajuda incluída no Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="25c46-146">For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAsIcon">
      <MemberSignature Language="C#" Value="public bool DisplayAsIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAsIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAsIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAsIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayAsIcon : bool with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-147"><b>True</b> se o objeto especificado for exibido como um ícone.</span><span class="sxs-lookup"><span data-stu-id="25c46-147"><b>True</b> if the specified object is displayed as an icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoVerb">
      <MemberSignature Language="C#" Value="public void DoVerb (ref object VerbIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoVerb([in]object&amp; VerbIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoVerb (Optional ByRef VerbIndex As Object)" />
      <MemberSignature Language="F#" Value="abstract member DoVerb : obj -&gt; unit" Usage="oLEFormat.DoVerb VerbIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VerbIndex" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="VerbIndex"><span data-ttu-id="25c46-148"><b>Objeto</b>opcional.</span><span class="sxs-lookup"><span data-stu-id="25c46-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="25c46-149">O verbo que o objeto OLE deve realizar.</span><span class="sxs-lookup"><span data-stu-id="25c46-149">The verb that the OLE object should perform.</span></span> <span data-ttu-id="25c46-150">Se esse argumento for omitido, o verbo padrão será enviado.</span><span class="sxs-lookup"><span data-stu-id="25c46-150">If this argument is omitted, the default verb is sent.</span></span> <span data-ttu-id="25c46-151">Se o objeto OLE não oferece suporte ao verbo requisitado, ocorrerá um erro.</span><span class="sxs-lookup"><span data-stu-id="25c46-151">If the OLE object does not support the requested verb, an error will occur.</span></span> <span data-ttu-id="25c46-152">Pode ser qualquer <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constante.</span><span class="sxs-lookup"><span data-stu-id="25c46-152">Can be any <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constant.</span></span></param>
        <summary><span data-ttu-id="25c46-153">Solicita que um objeto OLE execute um de seus verbos disponíveis — as ações que um objeto OLE leva para ativar seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="25c46-153">Requests that an OLE object perform one of its available verbs— the actions an OLE object takes to activate its contents.</span></span> <span data-ttu-id="25c46-154">Cada objeto OLE oferece suporte a um conjunto de verbos pertinentes a esse objeto.</span><span class="sxs-lookup"><span data-stu-id="25c46-154">Each OLE object supports a set of verbs that pertain to that object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public void Edit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Edit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Edit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Edit();" />
      <MemberSignature Language="F#" Value="abstract member Edit : unit -&gt; unit" Usage="oLEFormat.Edit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25c46-155">Abre o objeto OLE especificado para editar o aplicativo no qual foi criado.</span><span class="sxs-lookup"><span data-stu-id="25c46-155">Opens the specified OLE object for editing in the application it was created in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconIndex">
      <MemberSignature Language="C#" Value="public int IconIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconIndex : int with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-156">Retorna ou define o ícone que é usado quando a <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> propriedade é <b>true</b>: 0 (zero) corresponde ao primeiro ícone, 1 corresponde ao segundo ícone e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="25c46-156">Returns or sets the icon that's used when the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> property is <b>True</b>: 0 (zero) corresponds to the first icon, 1 corresponds to the second icon, and so on.</span></span> <span data-ttu-id="25c46-157">Se esse argumento for omitido, o primeiro ícone (padrão) é usado.</span><span class="sxs-lookup"><span data-stu-id="25c46-157">If this argument is omitted, the first (default) icon is used.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconLabel">
      <MemberSignature Language="C#" Value="public string IconLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property IconLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconLabel : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-158">Retorna ou define o texto exibido abaixo do ícone de um objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="25c46-158">Returns or sets the text displayed below the icon for an OLE object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconName">
      <MemberSignature Language="C#" Value="public string IconName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberSignature Language="VB.NET" Value="Public Property IconName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconName : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-159">Retorna ou define o arquivo de programa no qual o ícone de um objeto OLE está armazenado.</span><span class="sxs-lookup"><span data-stu-id="25c46-159">Returns or sets the program file in which the icon for an OLE object is stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconPath">
      <MemberSignature Language="C#" Value="public string IconPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IconPath : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-160">Retorna o caminho do arquivo no qual o ícone de um objeto OLE está armazenado.</span><span class="sxs-lookup"><span data-stu-id="25c46-160">Returns the path of the file in which the icon for an OLE object is stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-161">Retorna uma string que é usada para identificar a parte do arquivo de origem que está sendo vinculada.</span><span class="sxs-lookup"><span data-stu-id="25c46-161">Returns a string that's used to identify the portion of the source file that's being linked.</span></span> <span data-ttu-id="25c46-162">Por exemplo, se o arquivo de origem for uma pasta de trabalho do Microsoft Excel, a propriedade <b>Label</b> poderá retornar "Workbook1! R3C1: R4C2 "se o objeto OLE contiver apenas algumas células da planilha.</span><span class="sxs-lookup"><span data-stu-id="25c46-162">For example, if the source file is a Microsoft Excel workbook, the <b>Label</b> property might return "Workbook1!R3C1:R4C2" if the OLE object contains only a few cells from the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="25c46-163">Essa propriedade funciona apenas para formas, formas embutidas ou campos que sejam objetos OLE vinculados.</span><span class="sxs-lookup"><span data-stu-id="25c46-163">This property works only for shapes, inline shapes, or fields that are linked OLE objects.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Object : obj" Usage="Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-164">Retorna um <b>objeto</b> que representa a interface de nível superior do objeto OLE especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-164">Returns an <b>Object</b> that represents the specified OLE object's top-level interface.</span></span> <span data-ttu-id="25c46-165">Essa propriedade permite que você acesse as propriedades e métodos de um controle ActiveX ou o aplicativo no qual um objeto OLE foi criado.</span><span class="sxs-lookup"><span data-stu-id="25c46-165">This property allows you to access the properties and methods of an ActiveX control or the application in which an OLE object was created.</span></span> <span data-ttu-id="25c46-166">Para que essa propriedade funcione, o objeto OLE deve ter suporte para a automação OLE.</span><span class="sxs-lookup"><span data-stu-id="25c46-166">The OLE object must support OLE Automation for this property to work.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="oLEFormat.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25c46-167">Abre o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-167">Opens the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-168">Retorna um objeto que representa o objeto pai do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-168">Returns an object that represents the parent object of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormattingOnUpdate">
      <MemberSignature Language="C#" Value="public bool PreserveFormattingOnUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormattingOnUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormattingOnUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormattingOnUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveFormattingOnUpdate : bool with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-169"><b>True</b> preserva a formatação feita no Microsoft Word para um objeto OLE vinculado, como uma tabela vinculada a uma planilha do Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="25c46-169"><b>True</b> preserves formatting done in Microsoft Word to a linked OLE object, such as a table linked to a Microsoft Excel spreadsheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="25c46-p117">Quando o <b>PreserveFormattingOnUpdate</b> estiver definida como <b>True</b>, as alterações feitas no objeto no Word de formatação é preservada quando o objeto é atualizado. Word atualiza somente o conteúdo no objeto vinculado.</span><span class="sxs-lookup"><span data-stu-id="25c46-p117">When <b>PreserveFormattingOnUpdate</b> is set to <b>True</b>, formatting changes made to the object in Word is preserved when the object is updated. Word updates only the content in the linked object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgID">
      <MemberSignature Language="C#" Value="public string ProgID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProgID : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25c46-172">Retorna o identificador de programação (ProgID) para o objeto OLE especificado.</span><span class="sxs-lookup"><span data-stu-id="25c46-172">Returns the programmatic identifier (ProgID) for the specified OLE object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="25c46-173">O <b>ProgID</b> e <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> as propriedades serão (por padrão) retornam a mesma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="25c46-173">The <b>ProgID</b> and <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> properties will (by default) return the same string.</span></span> <span data-ttu-id="25c46-174">Entretanto, você pode alterar a propriedade <b>ClassType</b> para vínculos DDE.</span><span class="sxs-lookup"><span data-stu-id="25c46-174">However, you can change the <b>ClassType</b> property for DDE links.</span></span></para>
          <para><span data-ttu-id="25c46-175">
            <b>Segurança</b>  DDE (troca dinâmica de dados) é uma tecnologia mais antiga que não é segura.</span><span class="sxs-lookup"><span data-stu-id="25c46-175">
            <b>Security</b>  Dynamic data exchange (DDE) is an older technology that is not secure.</span></span> <span data-ttu-id="25c46-176">Se possível, use uma alternativa mais segura para o DDE.</span><span class="sxs-lookup"><span data-stu-id="25c46-176">If possible, use a more secure alternative to DDE.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
